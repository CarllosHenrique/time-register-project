version: "3.9"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: time_register_production
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d time_register_production"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  app:
    image: time-register:latest        # use a imagem que vocÃª construiu
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      DATABASE_URL: postgres://postgres:postgres@db:5432/time_register_production
      REDIS_URL: redis://redis:6379/0
      RAILS_LOG_TO_STDOUT: "1"
      RAILS_SERVE_STATIC_FILES: "1"
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:80/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  sidekiq:
    image: time-register:latest
    command: bash -lc "bundle exec sidekiq -C config/sidekiq.yml"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      app:
        condition: service_started
    environment:
      RAILS_ENV: production
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      DATABASE_URL: postgres://postgres:postgres@db:5432/time_register_production
      REDIS_URL: redis://redis:6379/0

volumes:
  db-data:
  redis-data:
